{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","liStyle","color","style","name","id","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","useEffect","_jsxs","className","type","onClick","sort","good1","good2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"wMAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GACT,IAAMC,EAAU,CACdC,MAAOF,EAAKE,OAGd,OACEL,cAAA,MAEE,UAAQ,OACRM,MAAOF,EAAQH,SAEdE,EAAKI,MAJDJ,EAAKK,GAOhB,KACG,ECnBA,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,ICAMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAwB,MAAKC,EAAAC,YAAAH,EAAA,GAAhDhB,EAAKkB,EAAA,GAAEE,EAAQF,EAAA,GAmBtB,OAjBAG,qBAAU,WAAQ,GAAG,CAACrB,IAkBpBsB,eAAA,OAAKC,UAAU,MAAKrB,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEuB,KAAK,SACL,UAAQ,aACRC,QAtBN,WACEf,IACGE,KAAKQ,EACV,EAmB4BlB,SACvB,mBAIDD,cAAA,UACEuB,KAAK,SACL,UAAQ,oBACRC,QAzBN,WDTOf,IACJE,MACC,SAAAZ,GAAK,OAAIA,EACN0B,MAAK,SAACC,EAAOC,GAAK,OAAKD,EAAMnB,KAAKqB,cAAcD,EAAMpB,KAAK,IAC3DsB,MAAM,EAAG,EAAE,ICOblB,KAAKQ,EACV,EAsBkClB,SAC7B,uBAIDD,cAAA,UACEuB,KAAK,SACL,UAAQ,aACRC,QA5BN,WDLOf,IACJE,MAAK,SAAAZ,GAAK,OAAIA,EAAM+B,QAAO,SAAA3B,GAAI,MAAmB,QAAfA,EAAKE,KAAe,GAAC,ICMtDM,KAAKQ,EACV,EAyB4BlB,SACvB,mBAIAF,GACCC,cAACH,EAAS,CAACE,MAAOA,MAI1B,EC5DAgC,IAASC,OACPhC,cAACc,EAAG,IACJmB,SAASC,eAAe,Q","file":"static/js/main.ea7b4095.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => {\n      const liStyle = {\n        color: good.color,\n      };\n\n      return (\n        <li\n          key={good.id}\n          data-cy=\"good\"\n          style={liStyle}\n        >\n          {good.name}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(\n      goods => goods\n        .sort((good1, good2) => good1.name.localeCompare(good2.name))\n        .slice(0, 5),\n    );\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { get5First, getAll, getRedGoods } from './api/goods';\n\n// import { getAll, get5First, getRed } from './api/goods';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[] | null>(null);\n\n  useEffect(() => { }, [goods]);\n\n  function handleGetAll() {\n    getAll()\n      .then(setGoods);\n  }\n\n  function handleGetFirstFive() {\n    get5First()\n      .then(setGoods);\n  }\n\n  function handleGetRed() {\n    getRedGoods()\n      .then(setGoods);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleGetAll}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleGetFirstFive}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleGetRed}\n      >\n        Load red goods\n      </button>\n\n      {goods && (\n        <GoodsList goods={goods} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}